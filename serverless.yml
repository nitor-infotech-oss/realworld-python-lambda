# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: realworld-python-lambda # NOTE: update this with your service name
#app: your-app-name
#tenant: your-tenant-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python3.7
#  profile: update this with your profile
  region: us-west-2
  environment:
    DYNAMODB_TABLE: users
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"


functions:
  create_user:
    handler: api/users.create_user
    events:
      - http:
          path: user
          method: post
          cors: true
  login_user:
    handler: api/users.login_user
    events:
      - http:
          path: user
          method: GET
          cors: true
  get_user:
    handler: api/users.get_user
    events:
      - http:
          path: user
          method: GET
          cors: true
  update_user:
    handler: api/users.update_user
    events:
      - http:
          path: user
          method: PUT
          cors: true

resources:
  Resources:
    LambdaDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
TableName: ${self:provider.environment.DYNAMODB_TABLE}
